services:
  primary:
    build:
        target: primary
    hostname: logical-primary
    container_name: postgres-replication-logical-primary
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: primary
    volumes:
      - primary-pgdata:/var/lib/postgresql/data
      - ./pg_hba.primary.conf:/etc/postgresql/pg_hba.primary.conf
      - ./scripts/init-primary.sh:/docker-entrypoint-initdb.d/init-primary.sh
    command: [ "-c", "config_file=/etc/postgresql/postgresql.logical.conf", "-c", "hba_file=/etc/postgresql/pg_hba.primary.conf" ]
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        timeout: 5s
        retries: 5
        start_period: 5s

  standby:
    build:
        target: standby
    hostname: logical-standby
    container_name: postgres-replication-logical-standby
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: standby
    volumes:
      - standby-pgdata:/var/lib/postgresql/data
      - ./scripts/init-standby.sh:/docker-entrypoint-initdb.d/init-standby.sh
    command: [ "-c", "config_file=/etc/postgresql/postgresql.logical.conf"]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      primary:
        condition: service_healthy

volumes:
  primary-pgdata:
  standby-pgdata:


networks:
    default:
        name: postgres-replication-network
        external: true
